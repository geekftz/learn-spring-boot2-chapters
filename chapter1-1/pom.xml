<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
<!--	parent：继承spring-boot-starter-parent的依赖管理，控制版本与打包等内容-->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.12</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
<!--	项目元数据：创建时候输入的Project Metadata部分，也就是Maven项目的基本元素，-->
<!--	包括：groupId、artifactId、version、name、description等-->
	<groupId>com.didispace</groupId>
	<artifactId>chapter1-1</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>chapter1-1</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

<!--	dependencies：项目具体依赖，-->
	<dependencies>
<!--		这里包含了spring-boot-starter-web用于实现HTTP接口（该依赖中包含了Spring MVC）-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

<!--		spring-boot-starter-test用于编写单元测试的依赖包。更多功能模块的使用我们将在后面的教程中逐步展开。-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

<!--	build：构建配置部分。-->
<!--	默认使用了spring-boot-maven-plugin，-->
<!--	配合spring-boot-starter-parent就可以把Spring Boot应用打包成JAR来直接运行。-->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
